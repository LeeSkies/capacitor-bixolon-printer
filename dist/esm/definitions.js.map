{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["/** Defines the interface for Printer plugin */\nexport interface PrinterPlugin {\n  /** \n   * Initialize the printer connection\n   * @returns {Promise<{success: boolean}>} A promise that resolves when initialization is complete\n   */\n  initialize(): Promise<{ success: boolean }>;\n  \n  /**\n   * Print text to the connected printer\n   * @param {PrintOptions} options - Options for printing text\n   * @returns {Promise<{success: boolean}>} A promise that resolves when printing is complete\n   */\n  printText(options: PrintOptions): Promise<{ success: boolean }>;\n  \n  /**\n   * Print a barcode\n   * @param {BarcodeOptions} options - Options for printing barcode\n   * @returns {Promise<{success: boolean}>} A promise that resolves when barcode printing is complete\n   */\n  printBarcode(options: BarcodeOptions): Promise<{ success: boolean }>;\n  \n  /**\n   * Check printer status\n   * @returns {Promise<PrinterStatus>} A promise that resolves to the printer status\n   */\n  getStatus(): Promise<PrinterStatus>;\n  \n  /**\n   * Disconnect from the printer\n   * @returns {Promise<{success: boolean}>} A promise that resolves when disconnection is complete\n   */\n  disconnect(): Promise<{ success: boolean }>;\n  \n  /**\n   * Discover network printers on the network\n   * @param {DiscoveryOptions} options - Options for network discovery\n   * @returns {Promise<DiscoveryResult>} A promise that resolves with discovered printers\n   */\n  discoverNetworkPrinters(options?: DiscoveryOptions): Promise<DiscoveryResult>;\n  \n  /**\n   * Connect to a specific printer\n   * @param {ConnectOptions} options - Options for connecting to printer\n   * @returns {Promise<{success: boolean, message?: string}>} A promise that resolves when connection is complete\n   */\n  connect(options: ConnectOptions): Promise<{ success: boolean; message?: string }>;\n  \n  /**\n   * Print a PDF document\n   * @param {PDFOptions} options - Options for printing PDF\n   * @returns {Promise<{success: boolean}>} A promise that resolves when PDF printing is complete\n   */\n  printPDF(options: PDFOptions): Promise<{ success: boolean }>;\n}\n\n/** Options for printing text */\nexport interface PrintOptions {\n  /** Text to print */\n  text: string;\n  /** Font size (optional, defaults to normal) */\n  fontSize?: 'small' | 'normal' | 'medium' | 'large' | 'xlarge';\n  /** Text alignment (optional, defaults to left) */\n  alignment?: 'left' | 'center' | 'right';\n  /** Whether to use bold text (optional, defaults to false) */\n  bold?: boolean;\n  /** Horizontal position (optional) */\n  horizontalPosition?: number;\n  /** Vertical position (optional) */\n  verticalPosition?: number;\n}\n\n/** Options for printing barcodes */\nexport interface BarcodeOptions {\n  /** Barcode data */\n  data: string;\n  /** Barcode type */\n  barcodeType?: 'CODE128' | 'CODE39' | 'CODE93' | 'CODABAR' | 'ITF' | 'UPC_A' | 'UPC_E' | 'EAN13' | 'EAN8';\n  /** Width of barcode (optional) */\n  width?: number;\n  /** Height of barcode (optional) */\n  height?: number;\n  /** Horizontal position (optional) */\n  horizontalPosition?: number;\n  /** Vertical position (optional) */\n  verticalPosition?: number;\n  /** Show human readable interpretation (optional) */\n  hri?: boolean;\n}\n\n/** Options for network printer discovery */\nexport interface DiscoveryOptions {\n  /** Discovery timeout in milliseconds (optional, defaults to 5000) */\n  timeout?: number;\n}\n\n/** Result of network printer discovery */\nexport interface DiscoveryResult {\n  /** Whether discovery was successful */\n  success: boolean;\n  /** Array of discovered printer IP addresses/hostnames */\n  devices: string[];\n}\n\n/** Options for connecting to a printer */\nexport interface ConnectOptions {\n  /** Printer address (IP address for network printers) */\n  address: string;\n  /** Connection type (optional, defaults to network) */\n  type?: 'network' | 'bluetooth' | 'usb';\n  /** Port number for network connections (optional, defaults to 9100) */\n  port?: number;\n  /** Connection timeout in milliseconds (optional, defaults to 5000) */\n  timeout?: number;\n}\n\n/** Options for printing PDF */\nexport interface PDFOptions {\n  /** Base64 encoded PDF file string */\n  base64FileString: string;\n  /** Width for PDF rendering (optional, defaults to 576) */\n  width?: number;\n  /** Horizontal position (optional, defaults to 0) */\n  horizontalPosition?: number;\n  /** Vertical position (optional, defaults to 0) */\n  verticalPosition?: number;\n  /** Page number to print (optional, defaults to 1) */\n  page?: number;\n  /** Enable dithering (optional, defaults to true) */\n  dithering?: boolean;\n  /** Enable compression (optional, defaults to true) */\n  compress?: boolean;\n  /** Quality level (optional, defaults to 0) */\n  level?: number;\n}\n\n/** Printer status information */\nexport interface PrinterStatus {\n  /** Whether printer is connected */\n  connected: boolean;\n  /** Whether printer is ready to print */\n  ready: boolean;\n  /** Paper status */\n  paperStatus: 'ok' | 'out' | 'cover_open' | 'unknown' | 'disconnected';\n  /** Whether paper is out (optional) */\n  paperOut?: boolean;\n  /** Whether cover is open (optional) */\n  coverOpen?: boolean;\n}"]}